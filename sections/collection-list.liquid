{%- liquid
    assign main_heading = section.settings.heading
    assign collection_per_row = section.settings.collection_per_row
    assign show_all_collections = section.settings.all_collections
    assign products_count = section.settings.products_count
    assign textAlignment = section.settings.text_alignment 
    assign lazyloading = ''
    assign lazyloadImages = section.settings.lazyload_images
    if lazyloadImages
    assign lazyloading = 'lazy'
    endif

    case collection_per_row
    when 1
    assign itemWidth = ''
    when 2 
    assign itemWidth = 'block__item--half'
    when 3
    assign itemWidth = 'block__item--auto block__item--one-third'
    when 4
    assign itemWidth = 'block__item--auto block__item--one-fourth'
    when 5
    assign itemWidth = 'block__item--auto block__item--one-fifth'
    endcase

    for block in section.blocks
        assign collection = collections[block.settings.collection]
        assign collection_heading = block.settings.collection_heading
    endfor
-%}
{%- style -%}
  .main__section-{{ section.id }}{
    margin-top: 30px;
    margin-bottom: 30px;
  }
  @media only screen and (min-width: 769px) {
    .main__section-{{ section.id }}{
      margin-top: {{ section.settings.margin_top }}px;
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }
{%- endstyle -%}
<section class="collection-list__wrapper main__section-{{ section.id }}">
  <div class="page__width">
    <div class="collection-list">
      <header class="collection-list__header">
        <div class="main__heading collection-list__heading text__align-{{ textAlignment }}">
          <h2>{{ main_heading }}</h2>
        </div>
      </header>
      <collection-list class="collection-grid">
        {%- if collection ==  blank or collection.products_count == 0 -%}
          {%- for i in (1..collection_per_row) -%}
            <collection-item class="collection-grid__item {{ itemWidth }}">
              <div class="collection-grid__content">
                {%- capture count -%}
                  {%- cycle 1, 2, 3, 4, 5, 6 -%}
                {%- endcapture -%}
                <div class="collection-grid__image">
                  {{ 'collection-' | append: count | placeholder_svg_tag: "placeholder__image" }}
                  {%- if settings.overlay_style == false -%}
                    <div class="overlay-box__container text__align-{{ textAlignment }}">
                      <div class="collection-grid__text">
                        <div class="collection-grid__title">
                          <h4>Example Collection</h4>
                        </div>
                      </div>
                    </div>
                  {%- endif -%}
                </div>
                {%- if settings.overlay_style -%}
                  <div class="collection-grid__text text__align-{{ textAlignment }}">   
                    <div class="collection-grid__title">
                      <h4>Example Collection</h4>
                    </div>
                  </div>
                {%- endif -%}
              </div>
            </collection-item>
          {%- endfor -%}
        {%- else -%}
          {%- for block in section.blocks -%}
            {%- render 'collection-item', 
              collection: collections[block.settings.collection],
              collection_heading: block.settings.collection_heading,
              lazyloading: lazyloading,
              collection_per_row: collection_per_row,
              products_count: products_count,
              textAlignment: textAlignment,
              itemWidth: itemWidth
            -%}
          {%- endfor -%}
        {%- endif -%}
      </collection-list>
    </div>
  </div>
</section>
{% schema %}
  {
    "name": "t:sections.collection-list.name",
    "class": "main__section",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "t:sections.collection-list.settings.heading.label",
        "default": "Collection List"
      },
      {
        "type": "range",
        "id": "collection_per_row",
        "label": "t:sections.collection-list.settings.collection_per_row.label",
        "default": 4,
        "min": 1,
        "max": 5,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "all_collections",
        "label": "t:sections.collection-list.settings.all_collections.label",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "products_count",
        "label": "t:sections.collection-list.settings.products_count.label",
        "default": true
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "t:sections.collection-list.settings.header_alignment.alignment.label",
        "options": [
          {
            "value": "left",
            "label": "t:sections.collection-list.settings.header_alignment.alignment.options.left.label"
          }, {
            "value": "center",
            "label": "t:sections.collection-list.settings.header_alignment.alignment.options.center.label"
          }, {
            "value": "right",
            "label": "t:sections.collection-list.settings.header_alignment.alignment.options.right.label"
          }
        ],
        "default": "center"
      },
      {
        "type": "checkbox",
        "id": "lazyload_images",
        "label": "t:sections.collection-list.settings.lazyload_images.label",
        "default": false,
        "info": "t:sections.collection-list.settings.lazyload_images.info"
      },
      {
        "type": "header",
        "content": "t:sections.collection-list.settings.header_spacing.label"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "t:sections.collection-list.settings.header_spacing.top_spacing.label",
        "default": 16
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "t:sections.collection-list.settings.header_spacing.bottom_spacing.label",
        "default": 16
      }
    ],
    "blocks": [
      {
        "type": "collection",
        "name": "t:sections.collection-list.blocks.collection.name",
        "limit": 20,
        "settings": [
          {
            "type": "collection",
            "id": "collection",
            "label": "t:sections.collection-list.blocks.collection.settings.collection.label"
          }, {
            "type": "text",
            "id": "collection_heading",
            "label": "t:sections.collection-list.blocks.collection.settings.collection_heading.label",
            "default": "Collection Title"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "t:sections.collection-list.presets.name",
        "blocks": [
          {
            "type": "collection"
          }, {
            "type": "collection"
          }, {
            "type": "collection"
          }, {
            "type": "collection"
          }
        ]
      }
    ]
  }
{% endschema %}