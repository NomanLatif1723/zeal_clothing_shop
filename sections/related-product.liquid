{%- liquid
  assign products_per_row = section.settings.products_per_row
  assign product_rows = section.settings.products_to_show
  assign product_limit = products_per_row | times: product_rows        
-%}
<div class="main__section-{{ section.id }}">
  <div class="page__width">
    <div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related">
      {%- if recommendations.performed? and recommendations.products_count > 0 -%}
        <div class="collection__header text__align-{{ section.settings.text_alignment }}">
          {%- if section.settings.heading != blank -%}
            <div class="main__heading">
              {%- if recommendations.intent == 'related' -%}
                <h2>{{ section.settings.heading }}</h2>
              {%- elsif recommendations.intent == 'complementary' -%}
                <h2>Pair it with</h2>
              {%- endif -%}
            </div>
          {%- endif -%}
        </div>
        <div class="collection-grid">
          {%- for product in recommendations.products limit: product_limit -%}
            {%- render 'product-item',
               product: product,
               products_per_row: section.settings.products_per_row,
               lazyloadImages: section.settings.lazyload_images,
               textAlignment: section.settings.text_alignment
            -%}
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</div>
{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}
{% schema %}
  {
    "name": "t:sections.product-recommendation.name",
    "class": "product__recommendation",
    "settings": [
      {
        "type": "paragraph",
        "content": "t:sections.product-recommendation.settings.show_dynamic_recommendation.info"
      },
      {
        "type": "text",
        "id": "heading",
        "label": "t:sections.product-recommendation.settings.heading.info",
        "default": "You May Also Like"
      },
      {
        "type": "header",
        "content": "t:sections.product-recommendation.settings.header_alignment.label"
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "t:sections.product-recommendation.settings.header_alignment.alignment.label",
        "options": [
          {
            "value": "left",
            "label": "t:sections.product-recommendation.settings.header_alignment.alignment.options.left.label"
          }, {
            "value": "center",
            "label": "t:sections.product-recommendation.settings.header_alignment.alignment.options.center.label"
          }, {
            "value": "right",
            "label": "t:sections.product-recommendation.settings.header_alignment.alignment.options.right.label"
          }
        ],
        "default": "center"
      },
      {
        "type": "range",
        "id": "products_to_show",
        "label": "t:sections.product-recommendation.settings.products_to_show.label",
        "min": 2,
        "max": 10,
        "step": 1,
        "default": 4
      },
      {
        "type": "range",
        "id": "products_per_row",
        "label": "t:sections.product-recommendation.settings.products_per_row.label",
        "min": 1,
        "max": 5,
        "step": 1,
        "default": 4
      },
      {
        "type": "checkbox",
        "id": "lazyload_images",
        "label": "t:sections.product-recommendation.settings.lazyload_images.label",
        "default": false
      },
      {
        "type": "header",
        "content": "t:sections.product-recommendation.settings.header_spacing.label"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "t:sections.product-recommendation.settings.header_spacing.top_spacing.label",
        "default": 16
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "t:sections.product-recommendation.settings.header_spacing.bottom_spacing.label",
        "default": 16
      }
    ]
  }
{% endschema %}