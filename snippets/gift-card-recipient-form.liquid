{% comment %}
<recipient-form data-section-id="{{ section.id }}">
  <div class="recipient__button">
    <input type="checkbox" id="recipient_gift_card-{{ section.id }}" />
    <label for="recipient_gift_card-{{ section.id }}">I Want to send this as a Gift</label>
  </div>
  <div class="recipient-form__container hidden">
    <div class="form__group">
      <label for="recipient-email-{{ section.id }}" class="form__label visually__hidden">{{ 'products.recipient.email' | t }}</label>
      <input type="email" id="recipient-email-{{ section.id }}" name="properties[Recipient Email]" placeholder="{{ 'products.recipient.email' | t }}"
        value="{{ form.email }}" class="form__input" required aria-label="{{ 'products.recipient.email' | t }}"
      >
    </div>
    <div class="form__group">
      <label for="recipient-name-{{ section.id }}" class="form__label visually__hidden">{{ 'products.recipient.name' | t }}</label>
      <input type="text" id="recipient-name-{{ section.id }}" name="properties[Recipient Name]" placeholder="{{ 'products.recipient.name' | t }}"
        value="{{ form.name }}" class="form__input" aria-label="{{ 'products.recipient.name' | t }}"
      >
    </div>
    <div class="form__group">
      <label for="recipient-message-{{ section.id }}" class="form__label visually__hidden">{{ 'products.recipient.message' | t }}</label>
      <textarea class="form__input" rows="5" name="properties[Recipient Message]" placeholder="{{ 'products.recipient.message' | t }}" 
        maxlength="200" id="recipient-message-{{ section.id }}" aria-label="{{ 'products.recipient.message' | t }}"></textarea>
    </div>
    <div class="form__group">
      <label for="recipient-message-{{ section.id }}" class="form__label visually__hidden">{{ 'products.recipient.date' | t }}</label>
      <input type="date" id="recipient-date-{{ section.id }}" name="properties[Recipient Date]" placeholder="{{ 'products.recipient.date' | t }}"
        value="{{ form.name }}" class="form__input" aria-label="{{ 'products.recipient.date' | t }}"
      >
    </div>
  </div>
</recipient-form>
{% endcomment %}

{% comment %}
  Renders gift card recipient form.
  Accepts:
  - product: {Object} product object.
  - form: {Object} the product form object.
  - section: {Object} section to which this snippet belongs.

  Usage:
  {% render 'gift-card-recipient-form', product: product, form: form, section: section %}
{% endcomment %}

<div class="customer">
  {%- assign gift_card_recipient_control_flag = 'properties[__shopify_send_gift_card_to_recipient]' -%}
  <recipient-form
    class="recipient-form"
    data-section-id="{{ section.id }}"
    data-product-variant-id="{{ product.selected_or_first_available_variant.id }}"
  >
    <input
      id="Recipient-checkbox-{{ section.id }}"
      type="checkbox"
      name="{{ gift_card_recipient_control_flag }}"
      disabled
    >
    <label class="recipient-checkbox" for="Recipient-checkbox-{{ section.id }}">
      <svg
        width="1.6rem"
        height="1.6rem"
        viewBox="0 0 16 16"
        aria-hidden="true"
        focusable="false"
      >
        <rect width="16" height="16" stroke="currentColor" fill="none" stroke-width="1"></rect>
      </svg>
      <svg
        aria-hidden="true"
        class="icon icon-checkmark"
        width="1.1rem"
        height="0.7rem"
        viewBox="0 0 11 7"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M1.5 3.5L2.83333 4.75L4.16667 6L9.5 1" stroke="currentColor" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
      <span>{{ 'recipient.form.checkbox' | t }}</span>
    </label>
    <div
      class="product-form__recipient-error-message-wrapper"
      role="alert"
      {% unless form.errors %}
        hidden
      {% endunless %}
    >
      <h2 class="form__message" tabindex="-1" autofocus>
        {% render 'icon-error' %}
        <span class="error-message">{{ 'templates.contact.form.error_heading' | t }}</span>
      </h2>

      <ul>
        {%- if form.errors -%}
          {%- for field in form.errors -%}
            <li>
              {%- if field == 'form' -%}
                {{ form.errors.messages[field] }}
              {%- else -%}
                <a href="#Recipient-{{ field }}-{{ section.id }}">
                  {{ form.errors.messages[field] }}
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        {%- endif -%}
      </ul>
    </div>
    <p
      id="Recipient-fields-live-region-{{ section.id }}"
      class="visually-hidden"
      role="status"
    ></p>
    <div class="recipient-fields">
      <hr>
      <div class="recipient-fields__field">
        <div class="field">
          <input
            class="field__input"
            id="Recipient-email-{{ section.id }}"
            type="email"
            placeholder="{{ 'recipient.form.email' | t }}"
            name="properties[Recipient email]"
            value="{{ form.email }}"
            {% if form.errors contains 'email' %}
              aria-invalid="true"
              aria-describedby="RecipientForm-email-error-{{ section.id }}"
            {% endif %}
          >
          <label class="field__label" for="Recipient-email-{{ section.id }}">
            <span class="recipient-email-label required">{{ 'recipient.form.email_label' | t }}</span>
            <span class="recipient-email-label optional">
              {{- 'recipient.form.email_label_optional_for_no_js_behavior' | t -}}
            </span>
          </label>
        </div>

        <div
          id="RecipientForm-email-error-{{ section.id }}"
          class="form__message{% unless form.errors contains 'email' %} hidden{% endunless %}"
        >
          {% render 'icon-error' %}
          <span class="error-message">
            {%- if form.errors contains 'email' -%}
              {{ form.errors.messages.email }}.
            {%- endif -%}
          </span>
        </div>
      </div>

      <div class="recipient-fields__field">
        <div class="field">
          <input
            class="field__input"
            autocomplete="name"
            type="text"
            id="Recipient-name-{{ section.id }}"
            name="properties[Recipient name]"
            placeholder="{{ 'recipient.form.name' | t }}"
            value="{{ form.name }}"
            {% if form.errors contains 'name' %}
              aria-invalid="true"
              aria-describedby="RecipientForm-name-error-{{ section.id }}"
            {% endif %}
          >
          <label class="field__label" for="Recipient-name-{{ section.id }}">
            {{- 'recipient.form.name_label' | t -}}
          </label>
        </div>

        <div
          id="RecipientForm-name-error-{{ section.id }}"
          class="form__message{% unless form.errors contains 'name' %} hidden{% endunless %}"
        >
          {% render 'icon-error' %}
          <span class="error-message">
            {%- if form.errors contains 'name' -%}
              {{ form.errors.messages.name }}.
            {%- endif -%}
          </span>
        </div>
      </div>

      <div class="recipient-fields__field">
        {%- assign max_chars_message = 200 -%}
        {%- assign max_chars_message_rendered = 'recipient.form.max_characters' | t: max_chars: max_chars_message -%}
        {%- assign message_label_rendered = 'recipient.form.message_label' | t -%}
        <div class="field">
          <textarea
            rows="10"
            id="Recipient-message-{{ section.id }}"
            class="text-area field__input"
            name="properties[Message]"
            maxlength="{{ max_chars_message }}"
            placeholder="{{ 'recipient.form.message' | t }}"
            aria-label="{{ message_label_rendered }} {{ max_chars_message_rendered }}"
            {% if form.errors contains 'message' %}
              aria-invalid="true"
              aria-describedby="RecipientForm-message-error-{{ section.id }}"
            {% endif %}
          >{{ form.message }}</textarea>
          <label class="form__label field__label" for="Recipient-message-{{ section.id }}">
            {{ message_label_rendered }}
          </label>
        </div>

        <label class="form__label recipient-form-field-label recipient-form-field-label--space-between">
          <span>{{ max_chars_message_rendered }}</span>
        </label>

        <div
          id="RecipientForm-message-error-{{ section.id }}"
          class="form__message{% unless form.errors contains 'message' %} hidden{% endunless %}"
        >
          {% render 'icon-error' %}
          <span class="error-message">
            {%- if form.errors contains 'message' -%}
              {{ form.errors.messages.message }}.
            {%- endif -%}
          </span>
        </div>
      </div>

      <div class="recipient-fields__field">
        <div class="field">
          <input
            class="field__input text-body"
            autocomplete="send_on"
            type="date"
            id="Recipient-send-on-{{ section.id }}"
            name="properties[Send on]"
            placeholder="{{ 'recipient.form.send_on' | t }}"
            pattern="\d{4}-\d{2}-\d{2}"
            value="{{ form.send_on }}"
            {% if form.errors contains 'send_on' %}
              aria-invalid="true"
              aria-describedby="RecipientForm-send_on-error-{{ section.id }}"
            {% endif %}
          >
          <label class="form__label field__label" for="Recipient-send-on-{{ section.id }}">
            {{ 'recipient.form.send_on_label' | t }}
          </label>
        </div>

        <div
          id="RecipientForm-send_on-error-{{ section.id }}"
          class="form__message{% unless form.errors contains 'send_on' %} hidden{% endunless %}"
        >
          {% render 'icon-error' %}
          <span class="error-message">
            {%- if form.errors contains 'send_on' -%}
              {{ form.errors.messages.send_on }}.
            {%- endif -%}
          </span>
        </div>
      </div>
    </div>
    <input
      type="hidden"
      name="{{ gift_card_recipient_control_flag }}"
      value="if_present"
      id="Recipient-control-{{ section.id }}"
    >
    <input
      type="hidden"
      name="properties[__shopify_offset]"
      value=""
      id="Recipient-timezone-offset-{{ section.id }}"
      disabled
    >
  </recipient-form>
</div>
<script>
  if (!customElements.get('recipient-form')) {
  customElements.define(
    'recipient-form',
    class RecipientForm extends HTMLElement {
      constructor() {
        super();
        this.recipientFieldsLiveRegion = this.querySelector(`#Recipient-fields-live-region-${this.dataset.sectionId}`);
        this.checkboxInput = this.querySelector(`#Recipient-checkbox-${this.dataset.sectionId}`);
        this.checkboxInput.disabled = false;
        this.hiddenControlField = this.querySelector(`#Recipient-control-${this.dataset.sectionId}`);
        this.hiddenControlField.disabled = true;
        this.emailInput = this.querySelector(`#Recipient-email-${this.dataset.sectionId}`);
        this.nameInput = this.querySelector(`#Recipient-name-${this.dataset.sectionId}`);
        this.messageInput = this.querySelector(`#Recipient-message-${this.dataset.sectionId}`);
        this.sendonInput = this.querySelector(`#Recipient-send-on-${this.dataset.sectionId}`);
        this.offsetProperty = this.querySelector(`#Recipient-timezone-offset-${this.dataset.sectionId}`);
        if (this.offsetProperty) this.offsetProperty.value = new Date().getTimezoneOffset().toString();

        this.errorMessageWrapper = this.querySelector('.product-form__recipient-error-message-wrapper');
        this.errorMessageList = this.errorMessageWrapper?.querySelector('ul');
        this.errorMessage = this.errorMessageWrapper?.querySelector('.error-message');
        this.defaultErrorHeader = this.errorMessage?.innerText;
        this.currentProductVariantId = this.dataset.productVariantId;
        this.addEventListener('change', this.onChange.bind(this));
        this.onChange();
      }

      cartUpdateUnsubscriber = undefined;
      variantChangeUnsubscriber = undefined;
      cartErrorUnsubscriber = undefined;

      connectedCallback() {
        this.cartUpdateUnsubscriber = subscribe(PUB_SUB_EVENTS.cartUpdate, (event) => {
          if (event.source === 'product-form' && event.productVariantId.toString() === this.currentProductVariantId) {
            this.resetRecipientForm();
          }
        });

        this.variantChangeUnsubscriber = subscribe(PUB_SUB_EVENTS.variantChange, (event) => {
          if (event.data.sectionId === this.dataset.sectionId) {
            this.currentProductVariantId = event.data.variant.id.toString();
          }
        });

        this.cartUpdateUnsubscriber = subscribe(PUB_SUB_EVENTS.cartError, (event) => {
          if (event.source === 'product-form' && event.productVariantId.toString() === this.currentProductVariantId) {
            this.displayErrorMessage(event.message, event.errors);
          }
        });
      }

      disconnectedCallback() {
        if (this.cartUpdateUnsubscriber) {
          this.cartUpdateUnsubscriber();
        }

        if (this.variantChangeUnsubscriber) {
          this.variantChangeUnsubscriber();
        }

        if (this.cartErrorUnsubscriber) {
          this.cartErrorUnsubscriber();
        }
      }

      onChange() {
        if (this.checkboxInput.checked) {
          this.enableInputFields();
          this.recipientFieldsLiveRegion.innerText = window.accessibilityStrings.recipientFormExpanded;
        } else {
          this.clearInputFields();
          this.disableInputFields();
          this.clearErrorMessage();
          this.recipientFieldsLiveRegion.innerText = window.accessibilityStrings.recipientFormCollapsed;
        }
      }

      inputFields() {
        return [this.emailInput, this.nameInput, this.messageInput, this.sendonInput];
      }

      disableableFields() {
        return [...this.inputFields(), this.offsetProperty];
      }

      clearInputFields() {
        this.inputFields().forEach((field) => (field.value = ''));
      }

      enableInputFields() {
        this.disableableFields().forEach((field) => (field.disabled = false));
      }

      disableInputFields() {
        this.disableableFields().forEach((field) => (field.disabled = true));
      }

      displayErrorMessage(title, body) {
        this.clearErrorMessage();
        this.errorMessageWrapper.hidden = false;
        if (typeof body === 'object') {
          this.errorMessage.innerText = this.defaultErrorHeader;
          return Object.entries(body).forEach(([key, value]) => {
            const errorMessageId = `RecipientForm-${key}-error-${this.dataset.sectionId}`;
            const fieldSelector = `#Recipient-${key}-${this.dataset.sectionId}`;
            const message = `${value.join(', ')}`;
            const errorMessageElement = this.querySelector(`#${errorMessageId}`);
            const errorTextElement = errorMessageElement?.querySelector('.error-message');
            if (!errorTextElement) return;

            if (this.errorMessageList) {
              this.errorMessageList.appendChild(this.createErrorListItem(fieldSelector, message));
            }

            errorTextElement.innerText = `${message}.`;
            errorMessageElement.classList.remove('hidden');

            const inputElement = this[`${key}Input`];
            if (!inputElement) return;

            inputElement.setAttribute('aria-invalid', true);
            inputElement.setAttribute('aria-describedby', errorMessageId);
          });
        }

        this.errorMessage.innerText = body;
      }

      createErrorListItem(target, message) {
        const li = document.createElement('li');
        const a = document.createElement('a');
        a.setAttribute('href', target);
        a.innerText = message;
        li.appendChild(a);
        li.className = 'error-message';
        return li;
      }

      clearErrorMessage() {
        this.errorMessageWrapper.hidden = true;

        if (this.errorMessageList) this.errorMessageList.innerHTML = '';

        this.querySelectorAll('.recipient-fields .form__message').forEach((field) => {
          field.classList.add('hidden');
          const textField = field.querySelector('.error-message');
          if (textField) textField.innerText = '';
        });

        [this.emailInput, this.messageInput, this.nameInput, this.sendonInput].forEach((inputElement) => {
          inputElement.setAttribute('aria-invalid', false);
          inputElement.removeAttribute('aria-describedby');
        });
      }

      resetRecipientForm() {
        if (this.checkboxInput.checked) {
          this.checkboxInput.checked = false;
          this.clearInputFields();
          this.clearErrorMessage();
        }
      }
    }
  );
}

</script>
